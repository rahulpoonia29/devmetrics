{
    "name": "devmetrics",
    "publisher": "Rahul",
    "displayName": "DevMetrics",
    "repository": {
        "type": "git",
        "url": "https://github.com/rahulpoonia29/devmetrics.git"
    },
    "description": "Gain insights into your coding activity directly within VS Code! This extension automatically tracks basic code metrics like lines of code added and removed within your project folders.  View session summaries in the Output Panel to monitor your coding progress locally.  Start understanding your coding habits today!",
    "version": "0.0.2",
    "engines": {
        "vscode": "^1.97.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "devmetrics.createProject",
                "title": "DevMetrics: Create New Project",
                "icon": "$(add)"
            },
            {
                "command": "devmetrics.deleteProject",
                "title": "DevMetrics: Delete Project",
                "icon": "$(trashcan)"
            },
            {
                "command": "devmetrics.manageProjects",
                "title": "DevMetrics: Manage Projects"
            },
            {
                "command": "devmetrics.renameProject",
                "title": "DevMetrics: Rename Project"
            },
            {
                "command": "devmetrics.changeProjectFolder",
                "title": "DevMetrics: Change Project Folder"
            },
            {
                "command": "devmetrics.viewProjectMetrics",
                "title": "DevMetrics: View Project Metrics",
                "icon": "$(graph-line)"
            },
            {
                "command": "devmetrics.startTracking",
                "title": "DevMetrics: Start Tracking",
                "icon": "$(play)"
            },
            {
                "command": "devmetrics.stopTracking",
                "title": "DevMetrics: Stop Tracking",
                "icon": "$(stop)"
            },
            {
                "command": "devmetrics.refreshData",
                "title": "Refresh DevMetrics Data",
                "category": "DevMetrics",
                "icon": "$(refresh)"
            }
        ],
        "configuration": {
            "title": "DevMetrics",
            "properties": {
                "devmetrics.analysisIntervalMinutes": {
                    "type": "number",
                    "default": 30,
                    "minimum": 5,
                    "maximum": 120,
                    "description": "The interval, in minutes, between each automated analysis run. Minimum: 5 minutes, Maximum: 120 minutes."
                },
                "devmetrics.excludedPaths": {
                    "type": "array",
                    "default": [
                        "node_modules/**",
                        ".git/**"
                    ],
                    "description": "Glob patterns for paths to exclude from tracking"
                }
            }
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "devmetricsContainer",
                    "title": "DevMetrics",
                    "icon": "$(graph-line)"
                }
            ]
        },
        "views": {
            "devmetricsContainer": [
                {
                    "id": "devmetrics.projectsView",
                    "name": "Projects",
                    "type": "tree"
                },
                {
                    "id": "devmetrics.metricsView",
                    "name": "Project Metrics",
                    "type": "tree",
                    "when": "config.devmetrics.showMetricsView == true"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "devmetrics.createProject",
                    "when": "view == devmetrics.projectsView",
                    "group": "navigation"
                },
                {
                    "command": "devmetrics.refreshData",
                    "when": "view == devmetrics.projectsView",
                    "group": "navigation"
                },
                {
                    "command": "devmetrics.refreshData",
                    "when": "view == devmetrics.metricsView",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "devmetrics.viewProjectMetrics",
                    "when": "view == devmetrics.projectsView && viewItem =~ /project/",
                    "group": "inline"
                },
                {
                    "command": "devmetrics.startTracking",
                    "when": "view == devmetrics.projectsView && viewItem == project-inactive",
                    "group": "inline"
                },
                {
                    "command": "devmetrics.stopTracking",
                    "when": "view == devmetrics.projectsView && viewItem == project-active",
                    "group": "inline"
                },
                {
                    "command": "devmetrics.renameProject",
                    "when": "view == devmetrics.projectsView && viewItem =~ /project/",
                    "group": "1_modification"
                },
                {
                    "command": "devmetrics.changeProjectFolder",
                    "when": "view == devmetrics.projectsView && viewItem =~ /project/",
                    "group": "1_modification"
                },
                {
                    "command": "devmetrics.deleteProject",
                    "when": "view == devmetrics.projectsView && viewItem =~ /project/",
                    "group": "1_modification"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "pnpm run package",
        "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
        "check-types": "tsc --noEmit",
        "lint": "eslint src",
        "test": "vscode-test",
        "prepare": "husky"
    },
    "lint-staged": {
        "**/*": "prettier --write --ignore-unknown"
    },
    "devDependencies": {
        "@types/fs-extra": "^11.0.4",
        "@types/lokijs": "^1.5.14",
        "@types/node": "22.x",
        "@types/uuid": "^10.0.0",
        "@types/vscode": "^1.97.0",
        "@typescript-eslint/eslint-plugin": "^8.24.1",
        "@typescript-eslint/parser": "^8.24.1",
        "@vscode/test-cli": "^0.0.10",
        "esbuild": "^0.25.0",
        "eslint": "^9.20.1",
        "eslint-config-prettier": "^10.0.1",
        "husky": "^9.1.7",
        "lint-staged": "^15.4.3",
        "npm-run-all": "^4.1.5",
        "prettier": "3.5.2",
        "typescript": "^5.7.3"
    },
    "dependencies": {
        "fs-extra": "^11.3.0",
        "lokijs": "^1.5.12",
        "parse-git-diff": "^0.0.17",
        "simple-git": "^3.27.0",
        "uuid": "^9.0.1"
    }
}
